// <auto-generated />
using System;
using KhumaloCraft.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KhumaloCraft.Data.Entities.Migrations
{
    [DbContext(typeof(KhumaloCraftDbContext))]
    [Migration("20241011154106_MigrationUpdate_DalCraftwork_AddPrimaryImageReferenceId")]
    partial class MigrationUpdate_DalCraftwork_AddPrimaryImageReferenceId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Cart_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("CraftworkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_CartItem_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CartId");

                    b.HasIndex("CraftworkId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CraftworkCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrimaryImageReferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Craftwork_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CraftworkCategoryId");

                    b.HasIndex("LastEditedByUserId");

                    b.HasIndex("PrimaryImageReferenceId");

                    b.ToTable("Craftwork", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("CraftworkHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftworkCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_CraftworkCategory_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("CraftworkCategory");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftworkImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CraftworkId")
                        .HasColumnType("int");

                    b.Property<int>("ImageReferenceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CraftworkImage_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CraftworkId");

                    b.HasIndex("ImageReferenceId");

                    b.ToTable("CraftworkImage");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftworkQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("CraftworkId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CraftworkQuantity_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex(new[] { "CraftworkId" }, "UQ_CraftworkQuantity_CraftworkId")
                        .IsUnique();

                    b.ToTable("CraftworkQuantity");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ImageTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SavedToAzure")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Image_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("ImageTypeId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalImageReference", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceId"));

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("ReferenceId")
                        .HasName("PK_ImageReference_ReferenceId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ReferenceId"));

                    b.HasIndex("ImageId");

                    b.ToTable("ImageReference");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalImageType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_ImageType_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex(new[] { "Name" }, "UQ_ImageType_Name")
                        .IsUnique();

                    b.ToTable("ImageType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<decimal>("TotalAnount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("VatRate")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK_Order_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CartId");

                    b.HasIndex("LastEditedByUserId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("Order", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("OrderHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_OrderStatus_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalPermission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_Permission_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalPermissionSecurityEntityType", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityEntityTypeId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId", "SecurityEntityTypeId")
                        .HasName("PK_PermissionSecurityEntityType_PermissionId_SecurityEntityTypeId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PermissionId", "SecurityEntityTypeId"));

                    b.HasIndex("SecurityEntityTypeId");

                    b.ToTable("PermissionSecurityEntityType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SecurityEntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id", "SecurityEntityTypeId")
                        .HasName("PK_Role_Id_SecurityEntityTypeId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "SecurityEntityTypeId"));

                    b.HasIndex("LastEditedByUserId");

                    b.HasIndex("SecurityEntityTypeId");

                    b.ToTable("Role", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("RoleHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalRolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityEntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.HasKey("RoleId", "SecurityEntityTypeId", "PermissionId")
                        .HasName("PK_RolePermission_RoleId_SecurityEntityTypeId_PermissionId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("RoleId", "SecurityEntityTypeId", "PermissionId"));

                    b.HasIndex("LastEditedByUserId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("SecurityEntityTypeId");

                    b.ToTable("RolePermission", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("RolePermissionHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalSecurityEntityType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_SecurityEntityType_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("SecurityEntityType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LastEditedByUserId");

                    b.ToTable("Setting", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SettingHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActivationEmailSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ImageReferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("ValidatedEmail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "UQ_User_Username")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LastEditedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityEntityTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_UserRole_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("LastEditedByUserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SecurityEntityTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("UserRoleHistory");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCart", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Cart_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCartItem", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CartItem_CartId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCraftwork", "Craftwork")
                        .WithMany()
                        .HasForeignKey("CraftworkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CartItem_CraftworkId");

                    b.Navigation("Cart");

                    b.Navigation("Craftwork");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftwork", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCraftworkCategory", "CraftworkCategory")
                        .WithMany()
                        .HasForeignKey("CraftworkCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Craftwork_CraftworkCategoryId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Craftwork_LastEditedByUserId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalImageReference", "ImageReference")
                        .WithMany()
                        .HasForeignKey("PrimaryImageReferenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Craftwork_PrimaryImageReferenceId");

                    b.Navigation("CraftworkCategory");

                    b.Navigation("ImageReference");

                    b.Navigation("LastEditedByUser");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftworkImage", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCraftwork", "Craftwork")
                        .WithMany()
                        .HasForeignKey("CraftworkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CraftworkImage_CraftworkId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalImageReference", "ImageReference")
                        .WithMany()
                        .HasForeignKey("ImageReferenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CraftworkImage_ImageReferenceId");

                    b.Navigation("Craftwork");

                    b.Navigation("ImageReference");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalCraftworkQuantity", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCraftwork", "Craftwork")
                        .WithMany()
                        .HasForeignKey("CraftworkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CraftworkQuantity_CraftworkId");

                    b.Navigation("Craftwork");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalImage", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalImageType", "ImageType")
                        .WithMany()
                        .HasForeignKey("ImageTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Image_ImageTypeId");

                    b.Navigation("ImageType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalImageReference", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalImage", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_ImageReference_ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalOrder", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Order_CartId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Order_LastEditedByUserId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalOrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Order_OrderStatusId");

                    b.Navigation("Cart");

                    b.Navigation("LastEditedByUser");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalPermissionSecurityEntityType", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalPermission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PermissionSecurityEntityType_PermissionId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalSecurityEntityType", "SecurityEntityType")
                        .WithMany()
                        .HasForeignKey("SecurityEntityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PermissionSecurityEntityType_SecurityEntityTypeId");

                    b.Navigation("Permission");

                    b.Navigation("SecurityEntityType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalRole", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Role_LastEditedByUserId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalSecurityEntityType", "SecurityEntityType")
                        .WithMany()
                        .HasForeignKey("SecurityEntityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Role_SecurityEntityTypeId");

                    b.Navigation("LastEditedByUser");

                    b.Navigation("SecurityEntityType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalRolePermission", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePermission_LastEditedByUserId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalPermission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePermission_PermissionId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePermission_RoleId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalSecurityEntityType", "SecurityEntityType")
                        .WithMany()
                        .HasForeignKey("SecurityEntityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePermission_SecurityEntityTypeId");

                    b.Navigation("LastEditedByUser");

                    b.Navigation("Permission");

                    b.Navigation("Role");

                    b.Navigation("SecurityEntityType");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalSetting", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Setting_LastEditedByUserId");

                    b.Navigation("LastEditedByUser");
                });

            modelBuilder.Entity("KhumaloCraft.Data.Entities.Entities.DalUserRole", b =>
                {
                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_UserRole_LastEditedByUserId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_RoleId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalSecurityEntityType", "SecurityEntityType")
                        .WithMany()
                        .HasForeignKey("SecurityEntityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_SecurityEntityTypeId");

                    b.HasOne("KhumaloCraft.Data.Entities.Entities.DalUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_UserId");

                    b.Navigation("LastEditedByUser");

                    b.Navigation("Role");

                    b.Navigation("SecurityEntityType");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
